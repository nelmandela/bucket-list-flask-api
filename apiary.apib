FORMAT: 1A
HOST: https://localhost:5000/

# Primer-BucketList-API
Primer is a API Resource for an online BucketList service.
> Built using Flask-Restful

# Allowed HTTPs requests:
<pre>
POST     : To create resource
PUT    : Update resource
GET     : Get a resource or list of resources
DELETE  : To delete resource
</pre>

# Description Of Usual Server Responses:
- 200 `OK` - the request was successful (some API calls may return 201 instead).
- 201 `Created` - the request was successful and a resource was created.
- 204 `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 401 `Unauthorized` - authentication failed or user doesn't have permissions for requested operation.
- 403 `Forbidden` - access denied.
- 404 `Not Found` - resource was not found.
- 405 `Method Not Allowed` - requested method is not supported for resource.

> ##The features attached to the service include:
* User Login and Sign up
* Token Bases Authentication
* Creating Bucketlists
* View Bucketlists
* Update bucketlists.
* Delete a single Bucketlist
* Create and view all Bucketlist Items
* Update and Delete Bucketlist Items.

## Group User Authentication

## Login [/api/v1/auth/login]
---
**User attributes:**

- id `(Number)` : unique identifier.
- username `(String)`
- password `(Number)`

---

### Authenticate a user and generate a token [POST]

To login use your registered credentials .

+ Request (application/json)

        {
            "username": "demo",
            "password": "pass123"
        }

+ Response 200 (application/json)

        {
            "message": "Woot! Woot! You're in."
            "token": "ARandomtok3n"
        }

## Group Resources

## Registration [/api/v1/auth/register]

### Register a new user [POST]

Use any username or password combination for the registration.

+ Request (application/json)

        {
            "username": "jimmy",
            "password": "pass123"
        }

+ Response 201 (application/json)

        {
            "message": "You have been successfully registered."
        }


## BucketList Resources [/api/v1/bucketlists/]

### Create a new bucketlist [POST]

Create a new bucketlist by making a `POST` request to the `/api/v1/bucketlists/` path

+ Request (application/json)

    + Headers

            Authorization: "Token <Auth_token>"

    + Body

            {
                "title": "Go on a cruise"
            }

+ Response 201 (application/json)

        {
            "message": "Bucketlist succesfully created"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid!"
        }

+ Response 409 (application/json)

        {
            "message": "Bucketlist already exists!"
        }

### Retrieve all bucketlists [GET]

Retrieve all BucketLists that are owned by the current user

Optional request parameters:

- `page` default is 1
- `limit` default is 20

+ Parameters

    + page (optional, int) ... the page to receive
    + limit (optional, int) ... the number of bucketlist results per page

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

+ Response 200 (application/json)

        {
           "id": <id>,
           "title": "Go on a cruise",
           "date_created": "Wed, 05 Jul 2017 10:02:03 GMT"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

+ Response 404 (application/json)

        {
            "message": "Bucketlist not found"
        }

## Single BucketList Resource [/api/v1/bucketlists/<int:id>/]

### Get a single bucketlist [GET]

Retrieve a single bucketlist
+ Parameters
    + id (required, Number, `1`) ... Numeric `id` of the Bucketlistr to perform action with.

+ Request (application/json)

    + Headers

            Authorization: "Token <JWT token>"

+ Response 200 (application/json)

        {
            "id": <id>,
            "title": "Learn how to swim",
            "date_created": "Wed, 05 Jul 2017 10:02:03 GMT"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

+ Response 404 (application/json)

        {
            "message": "Bucketlist cannot be found"
        }

### Update a bucketlist [PUT]

Update a single bucketlist

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

    + Body

            {
                "title": "Watch Wonder woman"
            }

+ Response 200 (application/json)

      {
          "id": <id>,
          "title": "Watch Wonder woman",
          "date_created": "Wed, 05 Jul 2017 10:02:03 GMT"
      }

+ Response 404 (application/json)

        {
            "message": "Bucketlist not found"
        }

+ Response 409 (application/json)

        {
            "message": "Invalid"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

### Delete a bucketlist [DELETE]

Delete a single bucketlist

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

+ Response 200 (application/json)

        {
            "message": "Bucketlist successfully deleted!"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

+ Response 404 (application/json)

        {
            "message": "Bucketlist cannot be found"
        }

## BucketList Items Resources [/api/v1/bucketlists/<int:bucketlist_id>/items/]

### Create a new bucketlist item [POST]

Create a new item in a bucketlist

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

    + Body

            {
                "name": "Read a Classic Novel"
            }

+ Response 201 (application/json)

        {
            "message": "Item succesfully created"
        }

+ Response 400 (application/json)

        {
            "message": "Invalid"
        }

+ Response 409 (application/json)

        {
            "message": "Item already exists!"
        }

+ Response 404 (application/json)

        {
            "message": "Bucketlist cannot be found"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

### List all bucketlist item [GET]

Retrieve all items in a bucketlist

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

+ Response 200 (application/json)

        {
            "id": <id>,
            "name": "Read a Classic Novel",
            'status': "False",
            'date_created': "Wed,Jul 2017 10:02:03 GMT",
            'bucketlist_id': 1
        }

+ Response 404 (application/json)

        {
            "message": "Bucketlist cannot be found"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

## Single BucketList Items Resources [/api/v1/bucketlists/<int:bucketlist_id>/items/<int:item_id>/]

### Retrieve a single bucketlist item [GET]

Retrieve a single item in a bucketlist

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

+ Response 200 (application/json)

        {
            "id": <id>,
            "name": "Read a Classic Novel",
            'status': "False",
            'date_created': "Wed,Jul 2017 10:02:03 GMT",
            'bucketlist_id': 1
        }


+ Response 404 (application/json)

        {
            "message": "Bucketlist not found"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

### Update a bucketlist item [PUT]

Update a single bucketlist item

+ Request (application/json)

    + Headers

            Authorization: "Token <auth_token>"

    + Body

            {
                "name": "Read a Classic Novel",
                'Status': "True"
            }

+ Response 201 (application/json)

        {
            "id": <id>,
            "name": "go the mall",
            'date_created': "Wed, 05 Jul 2017 10:02:03 GMT",
            'date_modified': "Wed, 05 Jul 2017 10:02:03 GMT"
        }


+ Response 404 (application/json)

        {
            "message": "Item not found"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }


### Delete a single bucketlist item [DELETE]

Delete a single bucketlist item

+ Request (application/json)

    + Headers

            Authorization: "Token <JWT token>"

+ Response 200 (application/json)

        {
            "message": "Item succesfully deleted"
        }

+ Response 401 (application/json)

        {
            "message": "Please provide a valid auth token!"
        }

+ Response 404 (application/json)

        {
            "message": "Item not found"
        }